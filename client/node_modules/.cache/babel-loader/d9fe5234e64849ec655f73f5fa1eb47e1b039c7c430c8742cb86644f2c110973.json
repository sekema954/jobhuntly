{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchJobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const fetchJobs = async (jobTitle, location) => {\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'your-rapidapi-key',\n        'X-RapidAPI-Host': 'indeed12.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      jobs.map(data.hits);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: setJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchJobs, \"iF/FKfpnfHoQh/M4HqAdId1E4FM=\");\n_c = SearchJobs;\nexport default SearchJobs;\nvar _c;\n$RefreshReg$(_c, \"SearchJobs\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","SearchJobs","_s","jobs","setJobs","fetchJobs","jobTitle","location","url","options","method","headers","response","fetch","data","json","map","hits","error","console","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","job","title","company","id","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\n\nfunction SearchJobs() {\n  const [jobs, setJobs] = useState([]);\n\n  const fetchJobs = async (jobTitle, location) => {\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n    \n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'your-rapidapi-key',\n        'X-RapidAPI-Host': 'indeed12.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      jobs.map(data.hits); \n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={fetchJobs} />\n      <div>\n        {setJobs.map((job) => (\n          <div key={job.id}>\n            <h3>{job.title}</h3>\n            <p>{job.company}</p>\n            <p>{job.location}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchJobs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC9C,MAAMC,GAAG,GAAG,qDAAqDF,QAAQ,aAAaC,QAAQ,4CAA4C;IAE1I,MAAME,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAE,mBAAmB;QACrC,iBAAiB,EAAE;MACrB;IACF,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;MAC1C,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCZ,IAAI,CAACa,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACF,SAAS;MAACuB,QAAQ,EAAEhB;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCzB,OAAA;MAAAoB,QAAA,EACGhB,OAAO,CAACY,GAAG,CAAEU,GAAG,iBACf1B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,EAAKM,GAAG,CAACC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBzB,OAAA;UAAAoB,QAAA,EAAIM,GAAG,CAACE;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBzB,OAAA;UAAAoB,QAAA,EAAIM,GAAG,CAACnB;QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHbC,GAAG,CAACG,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CArCQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}