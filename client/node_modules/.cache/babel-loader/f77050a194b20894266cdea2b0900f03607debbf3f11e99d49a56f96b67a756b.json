{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchCompaniesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchCompanies from '../Components/SearchCompanies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCompaniesPage() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [companyInfo, setCompanyInfo] = useState([]);\n  const fetchCompanyJobs = async company => {\n    const url = `https://indeed12.p.rapidapi.com/company/${company}/jobs?locality=us&start=1`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n        'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const result = await response.json();\n      console.log(result);\n      setCompanyInfo(result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSearch = searchTerm => {\n    setCompanyName(searchTerm);\n    fetchCompanyJobs(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchCompanies, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center flex-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: companyInfo.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-ce\",\n          children: \"No Job Positions Were found from this Company...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchCompaniesPage, \"qVsTN/1UoMkutq6I7iYxvY9JRio=\");\n_c = SearchCompaniesPage;\nexport default SearchCompaniesPage;\nvar _c;\n$RefreshReg$(_c, \"SearchCompaniesPage\");","map":{"version":3,"names":["React","useState","SearchCompanies","jsxDEV","_jsxDEV","SearchCompaniesPage","_s","companyName","setCompanyName","companyInfo","setCompanyInfo","fetchCompanyJobs","company","url","options","method","headers","process","env","REACT_APP_API_KEY","response","fetch","result","json","console","log","error","handleSearch","searchTerm","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","length","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchCompaniesPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchCompanies from '../Components/SearchCompanies';\n\nfunction SearchCompaniesPage() {\n  const [companyName, setCompanyName] = useState('');\n  const [companyInfo, setCompanyInfo] = useState([]);\n\n  const fetchCompanyJobs = async (company) => {\n    const url = `https://indeed12.p.rapidapi.com/company/${company}/jobs?locality=us&start=1`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n        'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const result = await response.json();\n      console.log(result);\n\n      setCompanyInfo(result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearch = (searchTerm) => {\n    setCompanyName(searchTerm);\n    fetchCompanyJobs(searchTerm);\n  };\n\n  return (\n    <div>\n      <SearchCompanies onSearch={handleSearch} />\n      <div className='flex items-center justify-center flex-wrap'>\n        <div>\n            {companyInfo.length > 0 ?(\n                <div>Loaded</div>\n            ):(\n                <p className='mt-4 text-ce'>No Job Positions Were found from this Company...</p>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchCompaniesPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C,MAAMC,GAAG,GAAG,2CAA2CD,OAAO,2BAA2B;IACzF,MAAME,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;QAC/C,iBAAiB,EAAE;MACrB;IACF,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEC,OAAO,CAAC;MAC1C,MAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MAEnBZ,cAAc,CAACY,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,YAAY,GAAIC,UAAU,IAAK;IACnCpB,cAAc,CAACoB,UAAU,CAAC;IAC1BjB,gBAAgB,CAACiB,UAAU,CAAC;EAC9B,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACF,eAAe;MAAC4B,QAAQ,EAAEH;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3C9B,OAAA;MAAK+B,SAAS,EAAC,4CAA4C;MAAAN,QAAA,eACzDzB,OAAA;QAAAyB,QAAA,EACKpB,WAAW,CAAC2B,MAAM,GAAG,CAAC,gBACnBhC,OAAA;UAAAyB,QAAA,EAAK;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAEjB9B,OAAA;UAAG+B,SAAS,EAAC,cAAc;UAAAN,QAAA,EAAC;QAAgD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAClF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CA5CQD,mBAAmB;AAAAgC,EAAA,GAAnBhC,mBAAmB;AA8C5B,eAAeA,mBAAmB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}