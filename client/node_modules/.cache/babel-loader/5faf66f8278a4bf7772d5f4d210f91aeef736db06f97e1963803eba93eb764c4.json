{"ast":null,"code":"import React,{useState}from'react';import SearchBar from'../Components/SearchBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SearchJobs(){const[jobs,setJobs]=useState([]);const[logos,setLogos]=useState({});// State to store logos\nconst[loading,setLoading]=useState(false);const fetchLogo=async companyName=>{const url=`https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;const options={method:'GET',headers:{'X-RapidAPI-Key':process.env.REACT_APP_API_KEY,'X-RapidAPI-Host':'indeed12.p.rapidapi.com'}};try{const response=await fetch(url,options);if(!response.ok){throw new Error(`HTTP request failed! Error: ${response.status}`);}const result=await response.json();return result.logo_url||null;}catch(error){console.error(`Failed to fetch logo for ${companyName}`,error);return null;}};const fetchJobs=async(jobTitle,location)=>{setLoading(true);const url=`https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;const options={method:'GET',headers:{'X-RapidAPI-Key':process.env.REACT_APP_API_KEY,'X-RapidAPI-Host':'indeed12.p.rapidapi.com'}};try{const response=await fetch(url,options);const data=await response.json();if(data.hits){const jobArray=Object.values(data.hits);setJobs(jobArray);// Fetch logos for each company\nconst logosMap={};for(const job of jobArray){if(job.company_name){const logoUrl=await fetchLogo(job.company_name);logosMap[job.company_name]=logoUrl;}}setLogos(logosMap);}else{setJobs([]);// In case hits is not present\n}}catch(error){console.error('Error fetching jobs:',error);setJobs([]);// Set jobs to an empty array on error\n}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:fetchJobs}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center flex-wrap justify-center gap-[20px] py-[30px]\",children:[loading&&/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading...\"}),jobs.length>0?jobs.map((job,index)=>/*#__PURE__*/_jsx(\"a\",{href:job.link,children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-[250px] border px-4 py-4 hover:scale-[1.1] hover:shadow-custom-dark transition-all duration-[.5s]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"div\",{className:`w-[50px] h-[50px] rounded-full border flex items-center justify-center ${!logos[job.company_name]?'bg-black':''}`,children:logos[job.company_name]?/*#__PURE__*/_jsx(\"img\",{src:logos[job.company_name],alt:`${job.company_name} logo`,className:\"object-contain w-full h-full rounded-full\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-white\",children:\"N/A\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"border border-purple-200 px-2 h-[35px] flex items-center text-center\",children:\"Full Time\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 py-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-[600]\",children:job.title}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-[12px] text-gray-500\",children:[job.company_name,\" \",/*#__PURE__*/_jsx(\"span\",{children:\".\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:job.location})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"text-[13px]\",children:job.description||'No description available'})})]})},index)):/*#__PURE__*/_jsx(\"p\",{className:\" flex text-center justify-center items-center py-5\",children:\"Search for Jobs.\"})]})]});}export default SearchJobs;","map":{"version":3,"names":["React","useState","SearchBar","jsx","_jsx","jsxs","_jsxs","SearchJobs","jobs","setJobs","logos","setLogos","loading","setLoading","fetchLogo","companyName","url","encodeURIComponent","options","method","headers","process","env","REACT_APP_API_KEY","response","fetch","ok","Error","status","result","json","logo_url","error","console","fetchJobs","jobTitle","location","data","hits","jobArray","Object","values","logosMap","job","company_name","logoUrl","children","onSearch","className","length","map","index","href","link","src","alt","title","description"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\n\nfunction SearchJobs() {\n  const [jobs, setJobs] = useState([]);\n  const [logos, setLogos] = useState({}); // State to store logos\n  const [loading, setLoading] = useState(false);\n\n  const fetchLogo = async (companyName) => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_API_KEY,\n        'X-RapidAPI-Host': 'indeed12.p.rapidapi.com',\n      },\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n      return result.logo_url || null;\n    } catch (error) {\n      console.error(`Failed to fetch logo for ${companyName}`, error);\n      return null;\n    }\n  };\n\n  const fetchJobs = async (jobTitle, location) => {\n    setLoading(true);\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_API_KEY,\n        'X-RapidAPI-Host': 'indeed12.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (data.hits) {\n        const jobArray = Object.values(data.hits);\n        setJobs(jobArray);\n\n        // Fetch logos for each company\n        const logosMap = {};\n        for (const job of jobArray) {\n          if (job.company_name) {\n            const logoUrl = await fetchLogo(job.company_name);\n            logosMap[job.company_name] = logoUrl;\n          }\n        }\n        setLogos(logosMap);\n      } else {\n        setJobs([]); // In case hits is not present\n      }\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      setJobs([]); // Set jobs to an empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={fetchJobs} />\n      <div className='flex items-center flex-wrap justify-center gap-[20px] py-[30px]'>\n        {loading && <p className=\"text-center\">Loading...</p>}\n        {jobs.length > 0 ? (\n          jobs.map((job, index) => (\n            <a key={index} href={job.link}>\n              <div className=\"w-[250px] border px-4 py-4 hover:scale-[1.1] hover:shadow-custom-dark transition-all duration-[.5s]\">\n                <div className=\"flex justify-between\">\n                  <div\n                    className={`w-[50px] h-[50px] rounded-full border flex items-center justify-center ${!logos[job.company_name] ? 'bg-black' : ''}`}>\n                    {logos[job.company_name] ? (\n                      <img\n                        src={logos[job.company_name]}\n                        alt={`${job.company_name} logo`}\n                        className=\"object-contain w-full h-full rounded-full\"\n                      />\n                    ) : (\n                      <span className=\"text-white\">N/A</span>\n                    )}\n                  </div>\n                  <p className=\"border border-purple-200 px-2 h-[35px] flex items-center text-center\">\n                    Full Time\n                  </p>\n                </div>\n                <div className=\"mt-6 py-2\">\n                  <p className=\"font-[600]\">{job.title}</p>\n                  <span className=\"text-[12px] text-gray-500\">\n                    {job.company_name} <span>.</span> <span>{job.location}</span>\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-[13px]\">\n                    {job.description || 'No description available'}\n                  </span>\n                </div>\n              </div>\n            </a>\n          ))\n        ) : (\n          <p className=' flex text-center justify-center items-center py-5'>Search for Jobs.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchJobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}