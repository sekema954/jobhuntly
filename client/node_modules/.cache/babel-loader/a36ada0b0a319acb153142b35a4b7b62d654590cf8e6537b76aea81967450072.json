{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchJobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [logos, setLogos] = useState({}); // State to store logos\n  const [loading, setLoading] = useState(false);\n  const fetchLogo = async companyName => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_API_KEY,\n        'X-RapidAPI-Host': process.env.REACT_APP_API_HOST\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n      return result.logo_url || null;\n    } catch (error) {\n      console.error(`Failed to fetch logo for ${companyName}`, error);\n      return null;\n    }\n  };\n  const fetchJobs = async (jobTitle, location) => {\n    setLoading(true);\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_API_KEY,\n        'X-RapidAPI-Host': process.env.REACT_APP_API_HOST\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (data.hits) {\n        const jobArray = Object.values(data.hits);\n        setJobs(jobArray);\n\n        // Fetch logos for each company\n        const logosMap = {};\n        for (const job of jobArray) {\n          if (job.company_name) {\n            const logoUrl = await fetchLogo(job.company_name);\n            logosMap[job.company_name] = logoUrl;\n          }\n        }\n        setLogos(logosMap);\n      } else {\n        setJobs([]); // In case hits is not present\n      }\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      setJobs([]); // Set jobs to an empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-wrap justify-center gap-[20px] py-[30px]\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: job.link,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[250px] border px-4 py-4 hover:scale-[1.1] hover:shadow-custom-dark transition-all duration-[.5s]\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-[50px] h-[50px] rounded-full border flex items-center justify-center ${!logos[job.company_name] ? 'bg-black' : ''}`,\n              children: logos[job.company_name] ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logos[job.company_name],\n                alt: `${job.company_name} logo`,\n                className: \"object-contain w-full h-full rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white\",\n                children: \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"border border-purple-200 px-2 h-[35px] flex items-center text-center\",\n              children: \"Full Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-[600]\",\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[12px] text-gray-500\",\n              children: [job.company_name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 40\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: job.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[13px]\",\n              children: job.description || 'No description available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" flex text-center justify-center items-center py-5\",\n        children: \"Search for Jobs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchJobs, \"VbdBL8vF0HbSxf0PGJ7qooRJojs=\");\n_c = SearchJobs;\nexport default SearchJobs;\nvar _c;\n$RefreshReg$(_c, \"SearchJobs\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","SearchJobs","_s","jobs","setJobs","logos","setLogos","loading","setLoading","fetchLogo","companyName","url","encodeURIComponent","options","method","headers","process","env","REACT_APP_API_KEY","REACT_APP_API_HOST","response","fetch","ok","Error","status","result","json","logo_url","error","console","fetchJobs","jobTitle","location","data","hits","jobArray","Object","values","logosMap","job","company_name","logoUrl","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","index","href","link","src","alt","title","description","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\n\nfunction SearchJobs() {\n  const [jobs, setJobs] = useState([]);\n  const [logos, setLogos] = useState({}); // State to store logos\n  const [loading, setLoading] = useState(false);\n\n  const fetchLogo = async (companyName) => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_API_KEY,\n        'X-RapidAPI-Host': process.env.REACT_APP_API_HOST,\n      },\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n      return result.logo_url || null;\n    } catch (error) {\n      console.error(`Failed to fetch logo for ${companyName}`, error);\n      return null;\n    }\n  };\n\n  const fetchJobs = async (jobTitle, location) => {\n    setLoading(true);\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_API_KEY,\n        'X-RapidAPI-Host': process.env.REACT_APP_API_HOST\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (data.hits) {\n        const jobArray = Object.values(data.hits);\n        setJobs(jobArray);\n\n        // Fetch logos for each company\n        const logosMap = {};\n        for (const job of jobArray) {\n          if (job.company_name) {\n            const logoUrl = await fetchLogo(job.company_name);\n            logosMap[job.company_name] = logoUrl;\n          }\n        }\n        setLogos(logosMap);\n      } else {\n        setJobs([]); // In case hits is not present\n      }\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      setJobs([]); // Set jobs to an empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={fetchJobs} />\n      <div className='flex items-center flex-wrap justify-center gap-[20px] py-[30px]'>\n        {loading && <p className=\"text-center\">Loading...</p>}\n        {jobs.length > 0 ? (\n          jobs.map((job, index) => (\n            <a key={index} href={job.link}>\n              <div className=\"w-[250px] border px-4 py-4 hover:scale-[1.1] hover:shadow-custom-dark transition-all duration-[.5s]\">\n                <div className=\"flex justify-between\">\n                  <div\n                    className={`w-[50px] h-[50px] rounded-full border flex items-center justify-center ${!logos[job.company_name] ? 'bg-black' : ''}`}>\n                    {logos[job.company_name] ? (\n                      <img\n                        src={logos[job.company_name]}\n                        alt={`${job.company_name} logo`}\n                        className=\"object-contain w-full h-full rounded-full\"\n                      />\n                    ) : (\n                      <span className=\"text-white\">N/A</span>\n                    )}\n                  </div>\n                  <p className=\"border border-purple-200 px-2 h-[35px] flex items-center text-center\">\n                    Full Time\n                  </p>\n                </div>\n                <div className=\"mt-6 py-2\">\n                  <p className=\"font-[600]\">{job.title}</p>\n                  <span className=\"text-[12px] text-gray-500\">\n                    {job.company_name} <span>.</span> <span>{job.location}</span>\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-[13px]\">\n                    {job.description || 'No description available'}\n                  </span>\n                </div>\n              </div>\n            </a>\n          ))\n        ) : (\n          <p className=' flex text-center justify-center items-center py-5'>Search for Jobs.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchJobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}