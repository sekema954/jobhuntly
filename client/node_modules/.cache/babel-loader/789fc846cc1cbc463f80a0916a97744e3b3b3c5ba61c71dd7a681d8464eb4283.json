{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchJobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const fetchJobs = async (jobTitle, location) => {\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'your-rapidapi-key',\n        'X-RapidAPI-Host': 'indeed12.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (data.hits) {\n        setJobs(Object.values(data.hits)); // Convert hits object to array\n      } else {\n        setJobs([]); // In case hits is not present\n      }\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      setJobs([]); // Set jobs to an empty array on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobs.length > 0 ? jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No jobs found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchJobs, \"iF/FKfpnfHoQh/M4HqAdId1E4FM=\");\n_c = SearchJobs;\nexport default SearchJobs;\nvar _c;\n$RefreshReg$(_c, \"SearchJobs\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","SearchJobs","_s","jobs","setJobs","fetchJobs","jobTitle","location","url","options","method","headers","response","fetch","data","json","hits","Object","values","error","console","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","index","title","company","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchJobs.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\n\nfunction SearchJobs() {\n  const [jobs, setJobs] = useState([]);\n\n  const fetchJobs = async (jobTitle, location) => {\n    const url = `https://indeed12.p.rapidapi.com/jobs/search?query=${jobTitle}&location=${location}&page_id=1&locality=us&fromage=1&radius=25`;\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'your-rapidapi-key',\n        'X-RapidAPI-Host': 'indeed12.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (data.hits) {\n        setJobs(Object.values(data.hits)); // Convert hits object to array\n      } else {\n        setJobs([]); // In case hits is not present\n      }\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      setJobs([]); // Set jobs to an empty array on error\n    }\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={fetchJobs} />\n      <div>\n        {jobs.length > 0 ? (\n          jobs.map((job, index) => (\n            <div key={index}>\n              <h3>{job.title}</h3>\n              <p>{job.company}</p>\n              <p>{job.location}</p>\n            </div>\n          ))\n        ) : (\n          <p>No jobs found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchJobs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC9C,MAAMC,GAAG,GAAG,qDAAqDF,QAAQ,aAAaC,QAAQ,4CAA4C;IAE1I,MAAME,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAE,mBAAmB;QACrC,iBAAiB,EAAE;MACrB;IACF,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;MAC1C,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,IAAI,EAAE;QACbZ,OAAO,CAACa,MAAM,CAACC,MAAM,CAACJ,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,MAAM;QACLZ,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;MACf;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cf,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACF,SAAS;MAACwB,QAAQ,EAAEjB;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC1B,OAAA;MAAAqB,QAAA,EACGlB,IAAI,CAACwB,MAAM,GAAG,CAAC,GACdxB,IAAI,CAACyB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAClB9B,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAAqB,QAAA,EAAKQ,GAAG,CAACE;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB1B,OAAA;UAAAqB,QAAA,EAAIQ,GAAG,CAACG;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB1B,OAAA;UAAAqB,QAAA,EAAIQ,GAAG,CAACtB;QAAQ;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHbI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACN,CAAC,gBAEF1B,OAAA;QAAAqB,QAAA,EAAG;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACrB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CA9CQD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAgDnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}