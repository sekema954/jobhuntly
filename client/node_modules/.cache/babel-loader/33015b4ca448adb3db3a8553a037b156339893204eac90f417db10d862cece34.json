{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchCompaniesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchCompanies from '../Components/SearchCompanies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCompaniesPage() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [companyInfo, setCompanyInfo] = useState([]);\n  const [logos, setLogos] = useState({});\n  const fetchLogo = async companyName => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n        'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(`Fetched logo for ${companyName}:`, result.hits.logo_url); // Check this log\n      return result.hits.logo_url || null;\n    } catch (error) {\n      console.error(`Failed to fetch logo for ${companyName}`, error);\n      return null;\n    }\n  };\n  const fetchCompanyJobs = async company => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(company)}/jobs?locality=us&start=1`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n        'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n      const modifiedResult = result.hits;\n      setCompanyInfo(modifiedResult);\n\n      // Fetch and store the logo after fetching the company jobs\n      const logoUrl = await fetchLogo(company);\n      setLogos(prevLogos => ({\n        ...prevLogos,\n        [company]: logoUrl\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSearch = searchTerm => {\n    setCompanyName(searchTerm);\n    fetchCompanyJobs(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchCompanies, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center flex-wrap py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center gap-[20px]\",\n        children: companyInfo.length > 0 ? companyInfo.map(job => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: job.final_url,\n          className: \"w-full md:w-[480px]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border bg-white shadow-lg px-5 py-5 flex items-center md:h-[170px]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-[50px] h-[50px] rounded-full border flex items-center justify-center ${!logos[companyName] ? 'bg-black' : ''}`,\n              children: logos[companyName] ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logos[companyName],\n                alt: `${companyName} logo`,\n                className: \"w-full h-full object-cover rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white\",\n                children: \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5 flex-grow\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block font-bold text-lg\",\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500 my-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: companyName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", job.location]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inline-block px-2 py-1 rounded-full text-[#56CDAD] bg-[#56CDAD] bg-opacity-20 text-sm\",\n                children: \"Full Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-center\",\n          children: \"No Positions Were found from this Company...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchCompaniesPage, \"cf6KAbod2MeSj4sEFAJFOICUcUU=\");\n_c = SearchCompaniesPage;\nexport default SearchCompaniesPage;\nvar _c;\n$RefreshReg$(_c, \"SearchCompaniesPage\");","map":{"version":3,"names":["React","useState","SearchCompanies","jsxDEV","_jsxDEV","SearchCompaniesPage","_s","companyName","setCompanyName","companyInfo","setCompanyInfo","logos","setLogos","fetchLogo","url","encodeURIComponent","options","method","headers","process","env","REACT_APP_API_KEY","response","fetch","ok","Error","status","result","json","console","log","hits","logo_url","error","fetchCompanyJobs","company","modifiedResult","logoUrl","prevLogos","handleSearch","searchTerm","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","job","href","final_url","src","alt","title","location","id","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Pages/SearchCompaniesPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchCompanies from '../Components/SearchCompanies';\n\nfunction SearchCompaniesPage() {\n  const [companyName, setCompanyName] = useState('');\n  const [companyInfo, setCompanyInfo] = useState([]);\n  const [logos, setLogos] = useState({});\n\n  const fetchLogo = async (companyName) => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n        'x-rapidapi-host': 'indeed12.p.rapidapi.com',\n      },\n    };\n  \n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(`Fetched logo for ${companyName}:`, result.hits.logo_url); // Check this log\n      return result.hits.logo_url || null;\n    } catch (error) {\n      console.error(`Failed to fetch logo for ${companyName}`, error);\n      return null;\n    }\n  };\n  \n\n  const fetchCompanyJobs = async (company) => {\n    const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(company)}/jobs?locality=us&start=1`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n        'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP request failed! Error: ${response.status}`);\n      }\n      const result = await response.json();\n\n      const modifiedResult = result.hits;\n      setCompanyInfo(modifiedResult);\n\n      // Fetch and store the logo after fetching the company jobs\n      const logoUrl = await fetchLogo(company);\n      setLogos((prevLogos) => ({ ...prevLogos, [company]: logoUrl }));\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearch = (searchTerm) => {\n    setCompanyName(searchTerm);\n    fetchCompanyJobs(searchTerm);\n  };\n\n  return (\n    <div>\n      <SearchCompanies onSearch={handleSearch} />\n      <div className='flex items-center justify-center flex-wrap py-10'>\n        <div className='flex flex-wrap justify-center gap-[20px]'>\n          {companyInfo.length > 0 ? (\n            companyInfo.map((job) => (\n              <a key={job.id} href={job.final_url} className='w-full md:w-[480px]'>\n                <div className='border bg-white shadow-lg px-5 py-5 flex items-center md:h-[170px]'>\n                  <div className={`w-[50px] h-[50px] rounded-full border flex items-center justify-center ${!logos[companyName] ? 'bg-black' : ''}`}>\n                    {/* Display the company logo if available */}\n                    {logos[companyName] ? (\n                      <img\n                        src={logos[companyName]}\n                        alt={`${companyName} logo`}\n                        className='w-full h-full object-cover rounded-full'\n                      />\n                    ) : (\n                      <span className=\"text-white\">N/A</span>\n                    )}\n                  </div>\n                  <div className='ml-5 flex-grow'>\n                    <span className='block font-bold text-lg'>{job.title}</span>\n                    <p className='text-sm text-gray-500 my-3'>\n                      <span>{companyName}</span>\n                      <span> {job.location}</span>\n                    </p>\n                    <span className='inline-block px-2 py-1 rounded-full text-[#56CDAD] bg-[#56CDAD] bg-opacity-20 text-sm'>\n                      Full Time\n                    </span>\n                  </div>\n                </div>\n              </a>\n            ))\n          ) : (\n            <p className='mt-4 text-center'>No Positions Were found from this Company...</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchCompaniesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}