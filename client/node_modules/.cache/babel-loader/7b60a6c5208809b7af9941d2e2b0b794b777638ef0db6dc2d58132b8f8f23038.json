{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LatestJobs(){const[data,setData]=useState([]);const[logos,setLogos]=useState({});const fetchLatestJobs=async()=>{const url=\"https://indeed12.p.rapidapi.com/jobs/search?query=manager&location=Georgia&page_id=1&locality=us&fromage=1&radius=\";const options={method:'GET',headers:{'x-rapidapi-key':'f8e6470882msh4963a2e6b93a4a4p123da1jsn921e443667ed','x-rapidapi-host':'indeed12.p.rapidapi.com'}};try{const response=await fetch(url,options);console.log('API Response:',response);if(!response.ok){throw new Error(`HTTP request failed! Error: ${response.status}`);}const result=await response.json();const modifiedResult=result.hits.slice(0,8);setData(modifiedResult);// Fetch logos for all companies\nconst logoPromises=modifiedResult.map(job=>fetchLogo(job.company_name));const logosData=await Promise.all(logoPromises);const logosMap=logosData.reduce((acc,logo,index)=>{acc[modifiedResult[index].company_name]=logo;return acc;},{});setLogos(logosMap);}catch(error){console.error('Failed To Fetch Latest Jobs From Indeed Rapid Api',error);}};const fetchLogo=async companyName=>{const url=`https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;const options={method:'GET',headers:{'x-rapidapi-key':process.env.REACT_APP_API_KEY,'x-rapidapi-host':'indeed12.p.rapidapi.com'}};try{const response=await fetch(url,options);if(!response.ok){throw new Error(`HTTP request failed! Error: ${response.status}`);}const result=await response.json();return result.hits.logo_url||null;}catch(error){console.error(`Failed to fetch logo for ${companyName}`,error);return null;}};useEffect(()=>{fetchLatestJobs();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"py-20 px-[30px] md:px-[0] bg-[#F8F8FD] flex justify-center items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center gap-8 md:gap-[50px]\",children:data.length>0?data.map(job=>/*#__PURE__*/_jsx(\"a\",{href:job.link,className:\"w-full md:w-[480px]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"border bg-white shadow-lg px-5 py-5 flex items-center md:h-[170px]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-[60px] h-[60px] rounded-full border flex-shrink-0 flex items-center justify-center\",children:logos[job.company_name]?/*#__PURE__*/_jsx(\"img\",{src:logos[job.company_name],alt:`${job.company_name} logo`,className:\"w-full h-full object-contain rounded-full\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"N/A\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-5 flex-grow\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"block font-bold text-lg\",children:job.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 my-3\",children:[/*#__PURE__*/_jsx(\"span\",{children:job.company_name}),\". \",/*#__PURE__*/_jsx(\"span\",{children:job.location})]}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-block px-2 py-1 rounded-full text-[#56CDAD] bg-[#56CDAD] bg-opacity-20 text-sm\",children:\"Full Time\"})]})]})},job.id)):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})})});}export default LatestJobs;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","LatestJobs","data","setData","logos","setLogos","fetchLatestJobs","url","options","method","headers","response","fetch","console","log","ok","Error","status","result","json","modifiedResult","hits","slice","logoPromises","map","job","fetchLogo","company_name","logosData","Promise","all","logosMap","reduce","acc","logo","index","error","companyName","encodeURIComponent","process","env","REACT_APP_API_KEY","logo_url","className","children","length","href","link","src","alt","title","location","id"],"sources":["/Users/admin/Desktop/Frontend-Projects/React/jobhuntly/client/src/Components/LatestJobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction LatestJobs() {\n    const [data, setData] = useState([]);\n    const [logos, setLogos] = useState({});\n\n    const fetchLatestJobs = async () => {\n        const url = \"https://indeed12.p.rapidapi.com/jobs/search?query=manager&location=Georgia&page_id=1&locality=us&fromage=1&radius=\";\n        const options = {\n            method: 'GET',\n            headers: {\n                'x-rapidapi-key': 'f8e6470882msh4963a2e6b93a4a4p123da1jsn921e443667ed',\n                'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n            }\n        };\n\n        try {\n            const response = await fetch(url, options);\n            console.log('API Response:', response);\n\n            if (!response.ok) {\n                throw new Error(`HTTP request failed! Error: ${response.status}`);\n            }\n            const result = await response.json();\n            \n            const modifiedResult = result.hits.slice(0, 8);\n            setData(modifiedResult);\n\n            // Fetch logos for all companies\n            const logoPromises = modifiedResult.map((job) =>\n                fetchLogo(job.company_name)\n            );\n            const logosData = await Promise.all(logoPromises);\n            const logosMap = logosData.reduce((acc, logo, index) => {\n                acc[modifiedResult[index].company_name] = logo;\n                return acc;\n            }, {});\n            setLogos(logosMap);\n\n        } catch (error) {\n            console.error('Failed To Fetch Latest Jobs From Indeed Rapid Api', error);\n        }\n    };\n\n    const fetchLogo = async (companyName) => {\n        const url = `https://indeed12.p.rapidapi.com/company/${encodeURIComponent(companyName)}?locality=us`;\n        const options = {\n            method: 'GET',\n            headers: {\n                'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n                'x-rapidapi-host': 'indeed12.p.rapidapi.com'\n            }\n        };\n\n        try {\n            const response = await fetch(url, options);\n            if (!response.ok) {\n                throw new Error(`HTTP request failed! Error: ${response.status}`);\n            }\n            const result = await response.json();\n            return result.hits.logo_url || null;\n        } catch (error) {\n            console.error(`Failed to fetch logo for ${companyName}`, error);\n            return null;\n        }\n    };\n\n    useEffect(() => {\n        fetchLatestJobs();\n    }, []);\n\n    return (\n        <div className='py-20 px-[30px] md:px-[0] bg-[#F8F8FD] flex justify-center items-center'>\n            <div className='flex flex-wrap justify-center gap-8 md:gap-[50px]'>\n                {data.length > 0 ? (\n                    data.map(job => (\n                        <a key={job.id} href={job.link} className='w-full md:w-[480px]'>\n                            <div className='border bg-white shadow-lg px-5 py-5 flex items-center md:h-[170px]'>\n                                <div className='w-[60px] h-[60px] rounded-full border flex-shrink-0 flex items-center justify-center'>\n                                    {logos[job.company_name] ? (\n                                        <img\n                                            src={logos[job.company_name]}\n                                            alt={`${job.company_name} logo`}\n                                            className='w-full h-full object-contain rounded-full'\n                                        />\n                                    ) : (\n                                        <span className='text-gray-500'>N/A</span>\n                                    )}\n                                </div>\n                                <div className='ml-5 flex-grow'>\n                                    <span className='block font-bold text-lg'>{job.title}</span>\n                                    <p className='text-sm text-gray-500 my-3'>\n                                        <span>{job.company_name}</span>. <span>{job.location}</span>\n                                    </p>\n                                    <span className='inline-block px-2 py-1 rounded-full text-[#56CDAD] bg-[#56CDAD] bg-opacity-20 text-sm'>\n                                        Full Time\n                                    </span>\n                                </div>\n                            </div>\n                        </a>\n                    ))\n                ) : (\n                    <p>Loading...</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default LatestJobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}